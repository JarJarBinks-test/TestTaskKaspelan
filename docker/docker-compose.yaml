services:
  config:
    image: "steeltoeoss/config-server:latest"
    container_name: config
    volumes:
      - ./configdata:/config
    command: ["--spring.cloud.config.server.native.searchLocations=file:///config"]
    environment:
     - "SPRING_PROFILES_ACTIVE=native"
    healthcheck:
      test: ["CMD-SHELL", "wget --spider http://config:8888/spring/rabbitMq || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    ports:
      - "15672:15672"

  eureka:
    image: "steeltoeoss/eureka-server:latest"
    container_name: eureka
    ports:
      - "8761:8761"
    healthcheck:
      test: ["CMD-SHELL", "wget --spider http://eureka:8761 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

  auth:
    build: 
      context: ../
      dockerfile: ./TestTaskKaspelan.Auth/Dockerfile
    container_name: auth
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    depends_on:
      config:
        condition: service_healthy
      eureka:
        condition: service_healthy

  saga:
    build: 
      context: ../
      dockerfile: ./TestTaskKaspelan.Saga/Dockerfile
    container_name: saga
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    depends_on:
      eureka:
        condition: service_healthy

  notification:
    build: 
      context: ../
      dockerfile: ./TestTaskKaspelan.Notification/Dockerfile
    container_name: notification
    environment:
      - DOTNET_ENVIRONMENT=Docker
    depends_on:
      config:
        condition: service_healthy
      eureka:
        condition: service_healthy
      rabbitmq:
        condition: service_started

  order:
    build: 
      context: ../
      dockerfile: ./TestTaskKaspelan.Order/Dockerfile
    container_name: order
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    depends_on:
      saga:
        condition: service_started
      rabbitmq:
        condition: service_started
      eureka:
        condition: service_healthy

  gateway:
    build: 
      context: ../
      dockerfile: ./TestTaskKaspelan.Gateway/Dockerfile
    container_name: gateway
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      auth:
        condition: service_started
      saga:
        condition: service_started
      order:
        condition: service_started
      notification:
        condition: service_started





        
      